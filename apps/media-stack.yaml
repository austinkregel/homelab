services:
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    restart: always
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8888:8888/tcp"                         # Gluetun Local Network HTTP proxy
      - "8388:8388/tcp"                         # Gluetun Local Network Shadowsocks
      - "8388:8388/udp"                         # Gluetun Local Network Shadowsocks

      - "${WEBUI_PORT_BAZARR:?err}:6767"        # WebUI Portal: Bazarr
      - "${WEBUI_PORT_LIDARR:?err}:8686"        # WebUI Portal: Lidarr
      - "${WEBUI_PORT_PROWLARR:?err}:9696"      # WebUI Portal: Prowlarr
      - "${WEBUI_PORT_RADARR:?err}:7878"        # WebUI Portal: Radarr
      - "${WEBUI_PORT_READARR:?err}:8787"       # WebUI Portal: Readarr
      - "${WEBUI_PORT_SABNZBD:?err}:8080"       # WebUI Portal: SABnzbd
      - "${WEBUI_PORT_SONARR:?err}:8989"        # WebUI Portal: Sonarr
      - "${WEBUI_PORT_QBITTORRENT:?err}:${WEBUI_PORT_QBITTORRENT:?err}"   # WebUI Portal: qBittorrent

      - "${QBIT_PORT_TCP:?err}:6881/tcp"        # Transmission Torrent Port TCP
      - "${QBIT_PORT_UDP:?err}:6881/udp"        # Transmission Torrent Port UDP
      - "${FLARESOLVERR_PORT:?err}:8191"        # Service Port: FlareSolverr
      
      - "${TDARR_SERVER_PORT:?err}:${TDARR_SERVER_PORT:?err}"   # Tdarr: Server Port
      - "${WEBUI_PORT_TDARR:?err}:${WEBUI_PORT_TDARR:?err}"     # Tdarr: WebUI Portal

    volumes:
      - ${DOCKER_DIRECTORY}/appdata/gluetun:/gluetun
      - ${DOCKER_DIRECTORY}/secrets/ca.ovpn:/gluetun/ca-51.protonvpn.udp.ovpn
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:?err}
      - OPENVPN_USER=${VPN_USERNAME:?err}
      - OPENVPN_PASSWORD=${VPN_PASSWORD:?err}
      - SERVER_REGION=${SERVER_REGION:?err}
      - SERVER_CITIES=${SERVER_CITIES}
      - SERVER_HOSTNAMES=${SERVER_HOSTNAMES}
      - FIREWALL_OUTBOUND_SUBNETS=${LOCAL_SUBNET:?err}
      - OPENVPN_CUSTOM_CONFIG=${OPENVPN_CUSTOM_CONFIG}
      - VPN_TYPE=${VPN_TYPE}
      - VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - HTTPPROXY=on
      - SHADOWSOCKS=on
    networks:
        traefik:
    labels:
        traefik.enable: true
        traefik.http.routers.gluetun-rtr.rule: Host(`gluetun.${DOMAIN_NAME}`)
        traefik.http.routers.gluetun-rtr.entrypoints: websecure
        traefik.http.routers.gluetun-rtr.service: gluetun-svc
        traefik.http.services.gluetun-svc.loadbalancer.server.port: 5076
        traefik.http.routers.gluetun-rtr.middlewares: chain-oauth-google@file

        traefik.http.routers.sonarr-rtr.rule: Host(`${SONARR_SUBDOMAIN:-sonarr}.${DOMAIN_NAME}`)
        traefik.http.routers.sonarr-rtr.entrypoints: websecure
        traefik.http.routers.sonarr-rtr.service: sonarr-svc
        traefik.http.services.sonarr-svc.loadbalancer.server.port: 8989
        traefik.http.routers.sonarr-rtr.middlewares: chain-oauth-google@file
        
        traefik.http.routers.readarr-rtr.rule: Host(`${READARR_SUBDOMAIN:-readarr}.${DOMAIN_NAME}`)
        traefik.http.routers.readarr-rtr.entrypoints: websecure
        traefik.http.routers.readarr-rtr.service: readarr-svc
        traefik.http.services.readarr-svc.loadbalancer.server.port: 8787
        traefik.http.routers.readarr-rtr.middlewares: chain-oauth-google@file
        
        traefik.http.routers.prowlarr-rtr.rule: Host(`${PROWLARR_SUBDOMAIN:-prowlarr}.${DOMAIN_NAME}`)
        traefik.http.routers.prowlarr-rtr.entrypoints: websecure
        traefik.http.routers.prowlarr-rtr.service: prowlarr-svc
        traefik.http.services.prowlarr-svc.loadbalancer.server.port: 9696
        traefik.http.routers.prowlarr-rtr.middlewares: chain-oauth-google@file
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/bazarr:/config
      - ${COMPLETED_DOWNLOADS}:/downloads
      - ${TV_DIR}:/tv
      - ${BOOKS_DIR}:/books
      - ${MOVIE_DIR}:/movies
      - ${MUSIC_DIR}:/music
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TIMEZONE:?err}
    network_mode: "service:gluetun"

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/lidarr:/config
      - ${COMPLETED_DOWNLOADS}:/downloads
      - ${MUSIC_DIR}:/music
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:lidarr
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/prowlarr:/config
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/qbittorrent:/config
      - ${COMPLETED_DOWNLOADS}:/downloads
      - ${TV_DIR}:/tv
      - ${BOOKS_DIR}:/books
      - ${MOVIE_DIR}:/movies
      - ${MUSIC_DIR}:/music
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - WEBUI_PORT=${WEBUI_PORT_QBITTORRENT:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:qbittorrent
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/radarr:/config
      - ${COMPLETED_DOWNLOADS}:/downloads
      - ${MOVIE_DIR}:/movies
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/readarr:/config
      - ${COMPLETED_DOWNLOADS}:/downloads
      - ${BOOKS_DIR}:/books
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/sabnzbd:/config
      - ${COMPLETED_DOWNLOADS}:/downloads
      - ${TV_DIR}:/tv
      - ${BOOKS_DIR}:/books
      - ${MOVIE_DIR}:/movies
      - ${MUSIC_DIR}:/music
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sabnzbd
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"
#    ports:
#      - "${WEBUI_PORT_SABNZBD:?err}:8080"             # Configured in Gluetun VPN container

###########################################################################
###########################################################################
##
##  Docker Compose File: Sonarr (LinuxServer.io)
##  Function: Series Library Manager (TV Shows)
##
##  Documentation: https://docs.linuxserver.io/images/docker-sonarr
##
###########################################################################
###########################################################################
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIRECTORY}/appdata/sonarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
      - /media/Downloads:/downloads
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"

