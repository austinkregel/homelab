include:
  - ./redis.yaml
  - ./postgres.yaml

services:
  # memcached:
  #   restart: no
  #   image: memcached:1.6.26-alpine
  #   command:
  #   - -I
  #   - ${SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE:-1M}
  #   healthcheck:
  #     interval: $HEALTHCHECK_INTERVAL
  #     timeout: $HEALTHCHECK_TIMEOUT
  #     retries: $HEALTHCHECK_RETRIES
  #     start_period: 10s
  #     test: echo stats | nc 127.0.0.1 11211
  #   networks:
  #     internal:
  # symbolicator:
  #   restart: no
  #   command: run -c /etc/symbolicator/config.yml
  #   image: getsentry/symbolicator:latest
  #   networks:
  #     internal:
  #   volumes:
  #     - '${DOCKER_DIRECTORY}/appdata/sentry-symbolicator/data:/data'
  #     - '${DOCKER_DIRECTORY}/appdata/sentry-symbolicator/config:/etc/symbolicator'
  # symbolicator-cleanup:
  #   build:
  #     context: ${DOCKER_DIRECTORY}/apps/sentry-cron
  #     args:
  #       BASE_IMAGE: "getsentry/symbolicator:latest"
  #   restart: no
  #   networks:
  #     internal:
  #   image: getsentry/symbolicator:latest
  #   command: '"55 23 * * * gosu symbolicator symbolicator cleanup"'
  #   volumes:
  #    - '${DOCKER_DIRECTORY}/appdata/sentry-symbolicator/data:/data'
  #    - '${DOCKER_DIRECTORY}/appdata/sentry-symbolicator/config:/etc/symbolicator'
  sentry:
    restart: no
    image: sentry:latest
    platform: ${DOCKER_PLATFORM:-}
    user: '999:999'
    networks:
      internal:
    depends_on:
      homelab-redis:
        condition: service_healthy
        restart: true
      homelab-postgres:
        condition: service_healthy
        restart: true
    command:
    - run
    - web
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: homelab-postgres
      SENTRY_DB_USER: postgres
      SENTRY_DB_PASSWORD: ${POSTGRES_PASSWORD}
      SENTRY_REDIS_HOST: homelab-redis
      SENTRY_REDIS_PASSWORD: ${REDIS_PASSWORD}
      PYTHONUSERBASE: /data/custom-packages
      SENTRY_CONF: /etc/sentry
      DEFAULT_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR: /etc/ssl/certs/ca-certificates.crt
      COMPOSE_PROFILES: null
      SENTRY_EVENT_RETENTION_DAYS: null
      SENTRY_MAIL_HOST: null
      SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE: null
    volumes:
      - '${DOCKER_DIRECTORY}/appdata/sentry/data:/data'
      - '${DOCKER_DIRECTORY}/appdata/sentry/config:/etc/sentry'
      - '${DOCKER_DIRECTORY}/appdata/sentry/geoip:/geoip:ro'
    ulimits:
      nofile:
        soft: 4096
        hard: 4096
    healthcheck:
      interval: $HEALTHCHECK_INTERVAL
      timeout: $HEALTHCHECK_TIMEOUT
      retries: $HEALTHCHECK_RETRIES
      start_period: 10s
      test:
      - "CMD"
      - "/bin/bash"
      - "-c"
        # Courtesy of https://unix.stackexchange.com/a/234089/108960
      - 'exec 3<>/dev/tcp/127.0.0.1/9000 && echo -e "GET /_health/ HTTP/1.1\r\nhost:
        127.0.0.1\r\n\r\n" >&3 && grep ok -s -m 1 <&3'
  cron:
    restart: no
    image: sentry
    user: '999:999'
    platform: ${DOCKER_PLATFORM:-}
    depends_on:
      homelab-redis:
        condition: service_healthy
      homelab-postgres:
        condition: service_healthy
      # memcached:
      #   condition: service_started
      # symbolicator:
      #   condition: service_started
    command: run cron
    networks:
      internal:
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: homelab-postgres
      SENTRY_DB_USER: postgres
      SENTRY_DB_PASSWORD: ${POSTGRES_PASSWORD}
      SENTRY_REDIS_HOST: homelab-redis
      PYTHONUSERBASE: /data/custom-packages
      SENTRY_CONF: /etc/sentry
      DEFAULT_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR: /etc/ssl/certs/ca-certificates.crt
      COMPOSE_PROFILES: null
      SENTRY_EVENT_RETENTION_DAYS: null
      SENTRY_MAIL_HOST: null
      SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE: null
    volumes:
    - ${DOCKER_DIRECTORY}/appdata/sentry/data:/data
    - ${DOCKER_DIRECTORY}/appdata/sentry/config:/etc/sentry
    - ${DOCKER_DIRECTORY}/appdata/sentry/geoip:/geoip:ro
  worker:
    restart: no
    image: sentry
    user: '999:999'
    platform: ${DOCKER_PLATFORM:-}
    networks:
      internal:
    depends_on:
      homelab-redis:
        condition: service_healthy
        restart: no
      homelab-postgres:
        condition: service_healthy
        restart: no
      # memcached:
      #   condition: service_started
      #   restart: no
      # symbolicator:
      #   condition: service_started
      #   restart: no
    command: run worker
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: homelab-postgres
      SENTRY_DB_USER: postgres
      SENTRY_DB_PASSWORD: ${POSTGRES_PASSWORD}
      SENTRY_REDIS_HOST: homelab-redis
      SENTRY_REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      PYTHONUSERBASE: /data/custom-packages
      SENTRY_CONF: /etc/sentry
      DEFAULT_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR: /etc/ssl/certs/ca-certificates.crt
      COMPOSE_PROFILES: null
      SENTRY_EVENT_RETENTION_DAYS: null
      SENTRY_MAIL_HOST: null
      SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE: null
    volumes:
    - ${DOCKER_DIRECTORY}/appdata/sentry/data:/data
    - ${DOCKER_DIRECTORY}/appdata/sentry/config:/etc/sentry
    - ${DOCKER_DIRECTORY}/appdata/sentry/geoip:/geoip:ro
  sentry-cleanup:
    restart: no
    user: '999:999'
    networks:
      internal:
    platform: ${DOCKER_PLATFORM:-}
    build:
      context: ${DOCKER_DIRECTORY}/apps/sentry-cron
      args:
        BASE_IMAGE: "getsentry/sentry:latest"
    depends_on:
      homelab-redis:
        condition: service_healthy
      homelab-postgres:
        condition: service_healthy
    entrypoint: /entrypoint.sh
    command: '"0 0 * * * gosu sentry sentry cleanup --days $SENTRY_EVENT_RETENTION_DAYS"'
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: homelab-postgres
      SENTRY_DB_USER: postgres
      SENTRY_DB_PASSWORD: ${POSTGRES_PASSWORD}
      SENTRY_REDIS_HOST: homelab-redis
      PYTHONUSERBASE: /data/custom-packages
      SENTRY_CONF: /etc/sentry
      DEFAULT_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR: /etc/ssl/certs/ca-certificates.crt
      COMPOSE_PROFILES: null
      SENTRY_EVENT_RETENTION_DAYS: null
      SENTRY_MAIL_HOST: null
      SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE: null
    volumes:
    - ${DOCKER_DIRECTORY}/appdata/sentry/data:/data
    - ${DOCKER_DIRECTORY}/appdata/sentry/config:/etc/sentry
    - ${DOCKER_DIRECTORY}/appdata/sentry/geoip:/geoip:ro
